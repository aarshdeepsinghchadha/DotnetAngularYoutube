{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class YoutubeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"https://localhost:44377/api/Youtube\";\n  }\n  getChannelVideos(pageToken, maxResults) {\n    const url = `${this.apiUrl}/GetChannelVideos?pageToken=${pageToken}&maxResults=${maxResults}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function YoutubeService_Factory(t) {\n    return new (t || YoutubeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: YoutubeService,\n    factory: YoutubeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["YoutubeService","constructor","http","apiUrl","getChannelVideos","pageToken","maxResults","url","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Projects\\YoutubeDevAngularUI\\my-youtube-app\\src\\app\\youtube.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { YoutubeResponse } from 'src/youtube-response.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YoutubeService {\n  private apiUrl = \"https://localhost:44377/api/Youtube\";\n\n  constructor(private http: HttpClient) { }\n\n  getChannelVideos(pageToken: string, maxResults: number): Observable<YoutubeResponse> {\n    const url = `${this.apiUrl}/GetChannelVideos?pageToken=${pageToken}&maxResults=${maxResults}`;\n    return this.http.get<YoutubeResponse>(url);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC;EAEd;EAExCC,gBAAgBA,CAACC,SAAiB,EAAEC,UAAkB;IACpD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,+BAA+BE,SAAS,eAAeC,UAAU,EAAE;IAC7F,OAAO,IAAI,CAACJ,IAAI,CAACM,GAAG,CAAkBD,GAAG,CAAC;EAC5C;EAAC,QAAAE,CAAA,G;qBARUT,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdd,cAAc;IAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}